---
name: macOS Build

# yamllint disable-line rule:truthy
on:
  - push

jobs:
  build:
    name: ${{matrix.buildname}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          #- os: macos-10.15
            #buildname: macOS 10.15
            #build_type: Release
            #compiler: clang_64
            #create_bundle: true
            #bundle_suffix: ''
            #cmake_args: ''
            #env:
              #MACOSX_DEPLOYMENT_TARGET: '10.15'

          - os: macos-12
            buildname: macOS 12 M1
            build_type: Release
            compiler: clang_64
            create_bundle: true
            bundle_suffix: '-macos-12-m1'
            cmake_args: >-
              -DWITH_QT6=1
              -DQT_MAJOR_VERSION=6
            env:
              CMAKE_OSX_ARCHITECTURES: 'x86_64;arm64'
              MACOSX_DEPLOYMENT_TARGET: '12'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: false
          fetch-depth: 1

      - name: Install dependencies
        run: '${{github.workspace}}/utils/github/install-macos.sh'

      - name: Build with CMake
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{github.workspace}}/CMakeLists.txt'
          cmakeBuildType: Release
          cmakeGenerator: Ninja
          buildDirectory: '${{runner.workspace}}/build'
          cmakeAppendedArgs: >-
            -DWITH_TESTS=TRUE
            -DCMAKE_BUILD_TYPE='${{matrix.build_type}}'
            -DCMAKE_PREFIX_PATH="/usr/local/opt/qt6/lib/cmake"
            ${{matrix.cmake_args}}

      - name: Create gnupg directory for tests
        run: mkdir -p ~/.gnupg

      - name: Create macOS bundle
        if: matrix.create_bundle
        working-directory: '${{runner.workspace}}/build'
        run: '${{github.workspace}}/utils/github/bundle-macos.sh'

      - name: Upload macOS bundle
        if: matrix.create_bundle
        uses: actions/upload-artifact@v2
        with:
          name: 'CopyQ${{matrix.bundle_suffix}}.dmg'
          path: '${{runner.workspace}}/build/CopyQ.dmg'
